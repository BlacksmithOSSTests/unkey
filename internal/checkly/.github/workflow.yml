# This GitHub Actions workflow triggers after receiving a Deployment Status event from GH Actions environment. This works
# with providers like Vercel, Heroku and others. This workflow does the following
#
# - Runs after deployment event
# - Uses the environment_url provided in the deployment event
# - Dry run all the checks on Checkly
# - If the dry run passes, deploy the checks.
#
#  You can of course trigger the Checkly CLI in other workflows or steps inside your GH Action configuration.
name: "checkly"
on: [deployment_status]

# Set the necessary credentials and export variables we can use to instrument our test run. Use the ENVIRONMENT_URL
# to run your checks against staging, preview or production.
env:
  CHECKLY_API_KEY: ${{ secrets.CHECKLY_API_KEY }}
  CHECKLY_ACCOUNT_ID: ${{ secrets.CHECKLY_ACCOUNT_ID }}
  ENVIRONMENT_URL: ${{ github.event.deployment_status.environment_url }}
  CHECKLY_TEST_ENVIRONMENT: ${{ github.event.deployment_status.environment }}
jobs:
  test-e2e:
    if: github.event.deployment_status.state == 'success'
    name: Test E2E on Checkly (${{ matrix.cpu }} vCPU)
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - cpu: "2"
            runner: blacksmith-2vcpu-ubuntu-2204
          - cpu: "4"
            runner: blacksmith-4vcpu-ubuntu-2204
          - cpu: "8"
            runner: blacksmith-8vcpu-ubuntu-2204
          - cpu: "16"
            runner: blacksmith-16vcpu-ubuntu-2204
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.deployment_status.deployment.ref }}"
          fetch-depth: 0
      - name: Set branch name
        run: echo "CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Restore or cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run checks
        id: run-checks
        run: npx checkly -v && npx checkly test -e ENVIRONMENT_URL=${{ env.ENVIRONMENT_URL }} --reporter=github --record
      - name: Create summary
        id: create-summary
        run: cat checkly-github-report.md > $GITHUB_STEP_SUMMARY
      - name: Deploy checks
        id: deploy-checks
        if: steps.run-checks.outcome == 'success' && github.event.deployment_status.environment == 'Production'
        run: npx checkly deploy --force
